/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

#ifndef DOXYGENDOC_ADDRESS_DEFINITION_INCLUDED
#define DOXYGENDOC_ADDRESS_DEFINITION_INCLUDED

#include "DoxygenDoc/AddressDecl.h"

#ifdef __cplusplus

inline DoxygenDoc::AddressPtr::AddressPtr()
{
    SetObject(DoxygenDoc::AddressPtr(DoxygenDoc::AddressPtr::force_creating_from_raw_pointer, doxygen_doc_address_default(), false).Detach());
}

inline const char* DoxygenDoc::AddressPtr::GetStreetName() const
{
    return doxygen_doc_address_get_street_name_const(GetRawPointer());
}

inline void DoxygenDoc::AddressPtr::SetStreetName(const char* street_name)
{
    doxygen_doc_address_set_street_name(GetRawPointer(), street_name);
}

inline const char* DoxygenDoc::AddressPtr::GetCity() const
{
    return doxygen_doc_address_get_city_const(GetRawPointer());
}

inline void DoxygenDoc::AddressPtr::SetCity(const char* city)
{
    doxygen_doc_address_set_city(GetRawPointer(), city);
}

inline unsigned int DoxygenDoc::AddressPtr::GetState() const
{
    return doxygen_doc_address_get_state_const(GetRawPointer());
}

inline void DoxygenDoc::AddressPtr::SetState(unsigned int state)
{
    doxygen_doc_address_set_state(GetRawPointer(), state);
}

inline DoxygenDoc::AddressPtr::AddressPtr(const AddressPtr& other)
{
    SetObject(other.GetRawPointer());
    if (other.GetRawPointer())
    {
        doxygen_doc_address_add_ref(other.GetRawPointer());
    }
}

#ifdef DOXYGENDOC_CPP_COMPILER_HAS_RVALUE_REFERENCES
inline DoxygenDoc::AddressPtr::AddressPtr(AddressPtr&& other)
{
    mObject = other.mObject;
    other.mObject = 0;
}
#endif /* DOXYGENDOC_CPP_COMPILER_HAS_RVALUE_REFERENCES */

inline DoxygenDoc::AddressPtr::AddressPtr(DoxygenDoc::AddressPtr::ECreateFromRawPointer, void *object_pointer, bool add_ref_object)
{
    SetObject(object_pointer);
    if (add_ref_object && object_pointer)
    {
        doxygen_doc_address_add_ref(object_pointer);
    }
}

inline DoxygenDoc::AddressPtr::~AddressPtr()
{
    if (GetRawPointer())
    {
        doxygen_doc_address_release(GetRawPointer());
        SetObject(0);
    }
}

inline DoxygenDoc::AddressPtr& DoxygenDoc::AddressPtr::operator=(const DoxygenDoc::AddressPtr& other)
{
    if (GetRawPointer() != other.GetRawPointer())
    {
        if (GetRawPointer())
        {
            doxygen_doc_address_release(GetRawPointer());
            SetObject(0);
        }
        SetObject(other.GetRawPointer());
        if (other.GetRawPointer())
        {
            doxygen_doc_address_add_ref(other.GetRawPointer());
        }
    }
    return *this;
}

#ifdef DOXYGENDOC_CPP_COMPILER_HAS_RVALUE_REFERENCES
inline DoxygenDoc::AddressPtr& DoxygenDoc::AddressPtr::operator=(DoxygenDoc::AddressPtr&& other)
{
    if (GetRawPointer() != other.GetRawPointer())
    {
        if (GetRawPointer())
        {
            doxygen_doc_address_release(GetRawPointer());
            SetObject(0);
        }
        mObject = other.mObject;
        other.mObject = 0;
    }
    return *this;
}
#endif /* DOXYGENDOC_CPP_COMPILER_HAS_RVALUE_REFERENCES */

inline DoxygenDoc::AddressPtr DoxygenDoc::AddressPtr::Null()
{
    return DoxygenDoc::AddressPtr(DoxygenDoc::AddressPtr::force_creating_from_raw_pointer, static_cast<void*>(0), false);
}

inline bool DoxygenDoc::AddressPtr::IsNull() const
{
    return !GetRawPointer();
}

inline bool DoxygenDoc::AddressPtr::IsNotNull() const
{
    return GetRawPointer() != 0;
}

inline bool DoxygenDoc::AddressPtr::operator!() const
{
    return !GetRawPointer();
}

inline void* DoxygenDoc::AddressPtr::Detach()
{
    void* result = GetRawPointer();
    SetObject(0);
    return result;
}

inline void* DoxygenDoc::AddressPtr::GetRawPointer() const
{
    return DoxygenDoc::AddressPtr::mObject ? mObject: 0;
}

inline DoxygenDoc::AddressPtr* DoxygenDoc::AddressPtr::operator->()
{
    return this;
}

inline const DoxygenDoc::AddressPtr* DoxygenDoc::AddressPtr::operator->() const
{
    return this;
}

inline void DoxygenDoc::AddressPtr::SetObject(void* object_pointer)
{
    mObject = object_pointer;
}

#endif /* __cplusplus */

#endif /* DOXYGENDOC_ADDRESS_DEFINITION_INCLUDED */

