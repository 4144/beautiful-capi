/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

#include <stdexcept>
#include <cassert>
#include "PositionImpl.h"
#include "ModelImpl.h"
#include "VectorImpl.h"

#ifdef _WIN32
    #ifdef __GNUC__
        #define EXAMPLE_API extern "C" __attribute__ ((dllexport))
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define EXAMPLE_API extern "C" __declspec(dllexport)
        #define EXAMPLE_API_CONVENTION __cdecl
    #endif
#elif __APPLE__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define EXAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define EXAMPLE_API extern "C"
    #endif
    #if defined __i386__
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define EXAMPLE_API_CONVENTION
    #endif
#elif __unix__ || __linux__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define EXAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define EXAMPLE_API extern "C"
    #endif
    #if defined __i386__
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define EXAMPLE_API_CONVENTION
    #endif
#else
    #error "Unknown platform"
#endif

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position_float_default()
{
    return new Example::PositionImpl<float>();
}

EXAMPLE_API float EXAMPLE_API_CONVENTION example_position_float_get_x(void* object_pointer)
{
    const Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    return self->GetX();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_float_set_x(void* object_pointer, float x)
{
    Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    self->SetX(x);
}

EXAMPLE_API float EXAMPLE_API_CONVENTION example_position_float_get_y(void* object_pointer)
{
    const Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    return self->GetY();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_float_set_y(void* object_pointer, float y)
{
    Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    self->SetY(y);
}

EXAMPLE_API float EXAMPLE_API_CONVENTION example_position_float_get_z(void* object_pointer)
{
    const Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    return self->GetZ();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_float_set_z(void* object_pointer, float z)
{
    Example::PositionImpl<float>* self = static_cast<Example::PositionImpl<float>*>(object_pointer);
    self->SetZ(z);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position_float_copy(void* object_pointer)
{
    return new Example::PositionImpl<float>(*static_cast<Example::PositionImpl<float>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_float_delete(void* object_pointer)
{
    delete static_cast<Example::PositionImpl<float>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position_double_default()
{
    return new Example::PositionImpl<double>();
}

EXAMPLE_API double EXAMPLE_API_CONVENTION example_position_double_get_x(void* object_pointer)
{
    const Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    return self->GetX();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_double_set_x(void* object_pointer, double x)
{
    Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    self->SetX(x);
}

EXAMPLE_API double EXAMPLE_API_CONVENTION example_position_double_get_y(void* object_pointer)
{
    const Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    return self->GetY();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_double_set_y(void* object_pointer, double y)
{
    Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    self->SetY(y);
}

EXAMPLE_API double EXAMPLE_API_CONVENTION example_position_double_get_z(void* object_pointer)
{
    const Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    return self->GetZ();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_double_set_z(void* object_pointer, double z)
{
    Example::PositionImpl<double>* self = static_cast<Example::PositionImpl<double>*>(object_pointer);
    self->SetZ(z);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position_double_copy(void* object_pointer)
{
    return new Example::PositionImpl<double>(*static_cast<Example::PositionImpl<double>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position_double_delete(void* object_pointer)
{
    delete static_cast<Example::PositionImpl<double>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_float_default()
{
    return new Example::Position4DImpl<float>();
}

EXAMPLE_API float EXAMPLE_API_CONVENTION example_position4_d_float_get_w(void* object_pointer)
{
    const Example::Position4DImpl<float>* self = static_cast<Example::Position4DImpl<float>*>(object_pointer);
    return self->GetW();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position4_d_float_set_w(void* object_pointer, float x)
{
    Example::Position4DImpl<float>* self = static_cast<Example::Position4DImpl<float>*>(object_pointer);
    self->SetW(x);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_float_copy(void* object_pointer)
{
    return new Example::Position4DImpl<float>(*static_cast<Example::Position4DImpl<float>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position4_d_float_delete(void* object_pointer)
{
    delete static_cast<Example::Position4DImpl<float>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_float_cast_to_base(void* object_pointer)
{
    return static_cast<Example::PositionImpl<float>*>(static_cast<Example::Position4DImpl<float>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_double_default()
{
    return new Example::Position4DImpl<double>();
}

EXAMPLE_API double EXAMPLE_API_CONVENTION example_position4_d_double_get_w(void* object_pointer)
{
    const Example::Position4DImpl<double>* self = static_cast<Example::Position4DImpl<double>*>(object_pointer);
    return self->GetW();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position4_d_double_set_w(void* object_pointer, double x)
{
    Example::Position4DImpl<double>* self = static_cast<Example::Position4DImpl<double>*>(object_pointer);
    self->SetW(x);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_double_copy(void* object_pointer)
{
    return new Example::Position4DImpl<double>(*static_cast<Example::Position4DImpl<double>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_position4_d_double_delete(void* object_pointer)
{
    delete static_cast<Example::Position4DImpl<double>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_position4_d_double_cast_to_base(void* object_pointer)
{
    return static_cast<Example::PositionImpl<double>*>(static_cast<Example::Position4DImpl<double>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_model_float_default()
{
    return new Example::ModelImpl<float>();
}

EXAMPLE_API const char* EXAMPLE_API_CONVENTION example_model_float_get_name(void* object_pointer)
{
    const Example::ModelImpl<float>* self = static_cast<Example::ModelImpl<float>*>(object_pointer);
    return self->GetName();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_float_set_name(void* object_pointer, const char* name)
{
    Example::ModelImpl<float>* self = static_cast<Example::ModelImpl<float>*>(object_pointer);
    self->SetName(name);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_model_float_get_position(void* object_pointer)
{
    const Example::ModelImpl<float>* self = static_cast<Example::ModelImpl<float>*>(object_pointer);
    Example::PositionImpl<float> result_implementation_copy(self->GetPosition());
    return new Example::PositionImpl<float>(result_implementation_copy);
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_float_set_position(void* object_pointer, void* position)
{
    Example::ModelImpl<float>* self = static_cast<Example::ModelImpl<float>*>(object_pointer);
    self->SetPosition(*static_cast<Example::PositionImpl<float>*>(position));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_float_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::ModelImpl<float>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_float_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::ModelImpl<float>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_model_double_default()
{
    return new Example::ModelImpl<double>();
}

EXAMPLE_API const char* EXAMPLE_API_CONVENTION example_model_double_get_name(void* object_pointer)
{
    const Example::ModelImpl<double>* self = static_cast<Example::ModelImpl<double>*>(object_pointer);
    return self->GetName();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_double_set_name(void* object_pointer, const char* name)
{
    Example::ModelImpl<double>* self = static_cast<Example::ModelImpl<double>*>(object_pointer);
    self->SetName(name);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_model_double_get_position(void* object_pointer)
{
    const Example::ModelImpl<double>* self = static_cast<Example::ModelImpl<double>*>(object_pointer);
    Example::PositionImpl<double> result_implementation_copy(self->GetPosition());
    return new Example::PositionImpl<double>(result_implementation_copy);
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_double_set_position(void* object_pointer, void* position)
{
    Example::ModelImpl<double>* self = static_cast<Example::ModelImpl<double>*>(object_pointer);
    self->SetPosition(*static_cast<Example::PositionImpl<double>*>(position));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_double_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::ModelImpl<double>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_model_double_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::ModelImpl<double>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_int_default()
{
    return new Example::VectorImpl<int>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_int_get_size(void* object_pointer)
{
    const Example::VectorImpl<int>* self = static_cast<Example::VectorImpl<int>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_int_clear(void* object_pointer)
{
    Example::VectorImpl<int>* self = static_cast<Example::VectorImpl<int>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_int_push_back(void* object_pointer, int value)
{
    Example::VectorImpl<int>* self = static_cast<Example::VectorImpl<int>*>(object_pointer);
    self->PushBack(value);
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_int_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<int>* self = static_cast<Example::VectorImpl<int>*>(object_pointer);
    return self->GetItem(index);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_int_copy(void* object_pointer)
{
    return new Example::VectorImpl<int>(*static_cast<Example::VectorImpl<int>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_int_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<int>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_double_default()
{
    return new Example::VectorImpl<double>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_double_get_size(void* object_pointer)
{
    const Example::VectorImpl<double>* self = static_cast<Example::VectorImpl<double>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_double_clear(void* object_pointer)
{
    Example::VectorImpl<double>* self = static_cast<Example::VectorImpl<double>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_double_push_back(void* object_pointer, double value)
{
    Example::VectorImpl<double>* self = static_cast<Example::VectorImpl<double>*>(object_pointer);
    self->PushBack(value);
}

EXAMPLE_API double EXAMPLE_API_CONVENTION example_vector_of_double_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<double>* self = static_cast<Example::VectorImpl<double>*>(object_pointer);
    return self->GetItem(index);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_double_copy(void* object_pointer)
{
    return new Example::VectorImpl<double>(*static_cast<Example::VectorImpl<double>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_double_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<double>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_float_default()
{
    return new Example::VectorImpl<Example::PositionImpl<float>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_example_position_float_get_size(void* object_pointer)
{
    const Example::VectorImpl<Example::PositionImpl<float>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_float_clear(void* object_pointer)
{
    Example::VectorImpl<Example::PositionImpl<float>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_float_push_back(void* object_pointer, void* value)
{
    Example::VectorImpl<Example::PositionImpl<float>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer);
    self->PushBack(*static_cast<Example::PositionImpl<float>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_float_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<Example::PositionImpl<float>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer);
    Example::PositionImpl<float> result_implementation_copy(self->GetItem(index));
    return new Example::PositionImpl<float>(result_implementation_copy);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_float_copy(void* object_pointer)
{
    return new Example::VectorImpl<Example::PositionImpl<float>>(*static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_float_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<Example::PositionImpl<float>>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_double_default()
{
    return new Example::VectorImpl<Example::PositionImpl<double>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_example_position_double_get_size(void* object_pointer)
{
    const Example::VectorImpl<Example::PositionImpl<double>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_double_clear(void* object_pointer)
{
    Example::VectorImpl<Example::PositionImpl<double>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_double_push_back(void* object_pointer, void* value)
{
    Example::VectorImpl<Example::PositionImpl<double>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer);
    self->PushBack(*static_cast<Example::PositionImpl<double>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_double_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<Example::PositionImpl<double>>* self = static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer);
    Example::PositionImpl<double> result_implementation_copy(self->GetItem(index));
    return new Example::PositionImpl<double>(result_implementation_copy);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position_double_copy(void* object_pointer)
{
    return new Example::VectorImpl<Example::PositionImpl<double>>(*static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position_double_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<Example::PositionImpl<double>>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_default()
{
    return new Example::VectorImpl<Example::Position4DImpl<float>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_get_size(void* object_pointer)
{
    const Example::VectorImpl<Example::Position4DImpl<float>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_clear(void* object_pointer)
{
    Example::VectorImpl<Example::Position4DImpl<float>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_push_back(void* object_pointer, void* value)
{
    Example::VectorImpl<Example::Position4DImpl<float>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer);
    self->PushBack(*static_cast<Example::Position4DImpl<float>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<Example::Position4DImpl<float>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer);
    Example::Position4DImpl<float> result_implementation_copy(self->GetItem(index));
    return new Example::Position4DImpl<float>(result_implementation_copy);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_copy(void* object_pointer)
{
    return new Example::VectorImpl<Example::Position4DImpl<float>>(*static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_float_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_default()
{
    return new Example::VectorImpl<Example::Position4DImpl<double>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_get_size(void* object_pointer)
{
    const Example::VectorImpl<Example::Position4DImpl<double>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_clear(void* object_pointer)
{
    Example::VectorImpl<Example::Position4DImpl<double>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_push_back(void* object_pointer, void* value)
{
    Example::VectorImpl<Example::Position4DImpl<double>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer);
    self->PushBack(*static_cast<Example::Position4DImpl<double>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<Example::Position4DImpl<double>>* self = static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer);
    Example::Position4DImpl<double> result_implementation_copy(self->GetItem(index));
    return new Example::Position4DImpl<double>(result_implementation_copy);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_copy(void* object_pointer)
{
    return new Example::VectorImpl<Example::Position4DImpl<double>>(*static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_position4_d_double_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<Example::Position4DImpl<double>>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_default()
{
    return new Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_get_size(void* object_pointer)
{
    const Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>* self = static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_clear(void* object_pointer)
{
    Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>* self = static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_push_back(void* object_pointer, void* value)
{
    Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>* self = static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer);
    self->PushBack(*static_cast<Example::VectorImpl<Example::Position4DImpl<float>>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_get_item(void* object_pointer, int index)
{
    const Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>* self = static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer);
    Example::VectorImpl<Example::Position4DImpl<float>> result_implementation_copy(self->GetItem(index));
    return new Example::VectorImpl<Example::Position4DImpl<float>>(result_implementation_copy);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_copy(void* object_pointer)
{
    return new Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>(*static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_example_vector_of_example_position4_d_float_delete(void* object_pointer)
{
    delete static_cast<Example::VectorImpl<Example::VectorImpl<Example::Position4DImpl<float>>>*>(object_pointer);
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_default()
{
    return new Example::VectorOfObjectsImpl<Example::ModelImpl<float>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_get_size(void* object_pointer)
{
    const Example::VectorOfObjectsImpl<Example::ModelImpl<float>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_clear(void* object_pointer)
{
    Example::VectorOfObjectsImpl<Example::ModelImpl<float>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_push_back(void* object_pointer, void* value)
{
    Example::VectorOfObjectsImpl<Example::ModelImpl<float>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer);
    self->PushBack(static_cast<Example::ModelImpl<float>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_get_item(void* object_pointer, int index)
{
    const Example::VectorOfObjectsImpl<Example::ModelImpl<float>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer);
    return self->GetItem(index);
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_default()
{
    return new Example::VectorOfObjectsImpl<Example::ModelImpl<double>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_get_size(void* object_pointer)
{
    const Example::VectorOfObjectsImpl<Example::ModelImpl<double>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer);
    return self->GetSize();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_clear(void* object_pointer)
{
    Example::VectorOfObjectsImpl<Example::ModelImpl<double>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer);
    self->Clear();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_push_back(void* object_pointer, void* value)
{
    Example::VectorOfObjectsImpl<Example::ModelImpl<double>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer);
    self->PushBack(static_cast<Example::ModelImpl<double>*>(value));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_get_item(void* object_pointer, int index)
{
    const Example::VectorOfObjectsImpl<Example::ModelImpl<double>>* self = static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer);
    return self->GetItem(index);
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_float_default()
{
    return new Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_float_get_a(void* object_pointer)
{
    const Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>* self = static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>*>(object_pointer);
    return self->GetA();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_float_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_float_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_float_cast_to_base(void* object_pointer)
{
    return static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_float_cast_to_example_vector_of_objects_derived_example_model_float(void* source_object)
{
    if (source_object)
    {
        return dynamic_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<float>>*>(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<float>>*>(source_object));
    }
    else
    {
        return 0;
    }
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_double_default()
{
    return new Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>();
}

EXAMPLE_API int EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_double_get_a(void* object_pointer)
{
    const Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>* self = static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>*>(object_pointer);
    return self->GetA();
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_double_add_ref(void* object_pointer)
{
    intrusive_ptr_add_ref(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>*>(object_pointer));
}

EXAMPLE_API void EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_double_release(void* object_pointer)
{
    intrusive_ptr_release(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_derived_example_model_double_cast_to_base(void* object_pointer)
{
    return static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(static_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>*>(object_pointer));
}

EXAMPLE_API void* EXAMPLE_API_CONVENTION example_vector_of_objects_example_model_double_cast_to_example_vector_of_objects_derived_example_model_double(void* source_object)
{
    if (source_object)
    {
        return dynamic_cast<Example::VectorOfObjectsDerivedImpl<Example::ModelImpl<double>>*>(static_cast<Example::VectorOfObjectsImpl<Example::ModelImpl<double>>*>(source_object));
    }
    else
    {
        return 0;
    }
}
