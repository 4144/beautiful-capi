/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

#ifndef HELLO_WORLD_CAPI_INCLUDED
#define HELLO_WORLD_CAPI_INCLUDED

#ifdef __cplusplus
    #define HELLO_WORLD_CAPI_PREFIX extern "C"
#else /* __cplusplus */
    #define HELLO_WORLD_CAPI_PREFIX
#endif /* __cplusplus */

#ifdef _WIN32
    #ifdef __GNUC__
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX __attribute__ ((dllimport))
        #define HELLO_WORLD_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX __declspec(dllimport)
        #define HELLO_WORLD_API_CONVENTION __cdecl
    #endif
#elif __APPLE__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX __attribute__ ((visibility ("default")))
    #else
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX
    #endif
    #ifdef __i386__
        #define HELLO_WORLD_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define HELLO_WORLD_API_CONVENTION
    #endif /* __i386__ */
#elif __unix__ || __linux__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX __attribute__ ((visibility ("default")))
    #else
        #define HELLO_WORLD_API HELLO_WORLD_CAPI_PREFIX
    #endif
    #ifdef __i386__
        #define HELLO_WORLD_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define HELLO_WORLD_API_CONVENTION
    #endif /* __i386__ */
#else
    #error "Unknown platform"
#endif

#ifdef __cplusplus
    #ifdef _MSC_VER
        #if _MSC_VER >= 1900
            #define HELLO_WORLD_NOEXCEPT noexcept
        #else /* _MSC_VER >= 1900 */
            #define HELLO_WORLD_NOEXCEPT
        #endif /* _MSC_VER >= 1900 */
        #if _MSC_VER >= 1600
            #define HELLO_WORLD_CPP_COMPILER_HAS_RVALUE_REFERENCES
        #endif /* _MSC_VER >= 1600 */
        #if _MSC_VER >= 1800
            #define HELLO_WORLD_CPP_COMPILER_HAS_MOVE_CONSTRUCTOR_DELETE
        #endif /* _MSC_VER >= 1800 */
    #else /* _MSC_VER */
        #if __cplusplus >= 201103L
            #define HELLO_WORLD_NOEXCEPT noexcept
            #define HELLO_WORLD_CPP_COMPILER_HAS_RVALUE_REFERENCES
            #define HELLO_WORLD_CPP_COMPILER_HAS_MOVE_CONSTRUCTOR_DELETE
        #else /* __cplusplus >= 201103L */
            #define HELLO_WORLD_NOEXCEPT
        #endif /* __cplusplus >= 201103L */
    #endif /* _MSC_VER */
#endif /* __cplusplus */

#ifndef HELLO_WORLD_CAPI_USE_DYNAMIC_LOADER
    
    HELLO_WORLD_API void* HELLO_WORLD_API_CONVENTION hello_world_printer_default();
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_printer_show(void* object_pointer);
    HELLO_WORLD_API void* HELLO_WORLD_API_CONVENTION hello_world_printer_copy(void* object_pointer);
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_printer_delete(void* object_pointer);
    HELLO_WORLD_API void* HELLO_WORLD_API_CONVENTION hello_world_scanner_default();
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_scanner_scan(void* object_pointer);
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_scanner_delete(void* object_pointer);
    HELLO_WORLD_API void* HELLO_WORLD_API_CONVENTION hello_world_plotter_default();
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_plotter_draw(void* object_pointer);
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_plotter_add_ref(void* object_pointer);
    HELLO_WORLD_API void HELLO_WORLD_API_CONVENTION hello_world_plotter_release(void* object_pointer);
    
#else /* HELLO_WORLD_CAPI_USE_DYNAMIC_LOADER */
    
    typedef void* (HELLO_WORLD_API_CONVENTION *hello_world_printer_default_function_type)();
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_printer_show_function_type)(void* object_pointer);
    typedef void* (HELLO_WORLD_API_CONVENTION *hello_world_printer_copy_function_type)(void* object_pointer);
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_printer_delete_function_type)(void* object_pointer);
    typedef void* (HELLO_WORLD_API_CONVENTION *hello_world_scanner_default_function_type)();
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_scanner_scan_function_type)(void* object_pointer);
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_scanner_delete_function_type)(void* object_pointer);
    typedef void* (HELLO_WORLD_API_CONVENTION *hello_world_plotter_default_function_type)();
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_plotter_draw_function_type)(void* object_pointer);
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_plotter_add_ref_function_type)(void* object_pointer);
    typedef void (HELLO_WORLD_API_CONVENTION *hello_world_plotter_release_function_type)(void* object_pointer);
    
    #ifdef HELLO_WORLD_CAPI_DEFINE_FUNCTION_POINTERS
        
        extern hello_world_printer_default_function_type hello_world_printer_default = 0;
        extern hello_world_printer_show_function_type hello_world_printer_show = 0;
        extern hello_world_printer_copy_function_type hello_world_printer_copy = 0;
        extern hello_world_printer_delete_function_type hello_world_printer_delete = 0;
        extern hello_world_scanner_default_function_type hello_world_scanner_default = 0;
        extern hello_world_scanner_scan_function_type hello_world_scanner_scan = 0;
        extern hello_world_scanner_delete_function_type hello_world_scanner_delete = 0;
        extern hello_world_plotter_default_function_type hello_world_plotter_default = 0;
        extern hello_world_plotter_draw_function_type hello_world_plotter_draw = 0;
        extern hello_world_plotter_add_ref_function_type hello_world_plotter_add_ref = 0;
        extern hello_world_plotter_release_function_type hello_world_plotter_release = 0;
        
    #else /* HELLO_WORLD_CAPI_DEFINE_FUNCTION_POINTERS */
        
        extern hello_world_printer_default_function_type hello_world_printer_default;
        extern hello_world_printer_show_function_type hello_world_printer_show;
        extern hello_world_printer_copy_function_type hello_world_printer_copy;
        extern hello_world_printer_delete_function_type hello_world_printer_delete;
        extern hello_world_scanner_default_function_type hello_world_scanner_default;
        extern hello_world_scanner_scan_function_type hello_world_scanner_scan;
        extern hello_world_scanner_delete_function_type hello_world_scanner_delete;
        extern hello_world_plotter_default_function_type hello_world_plotter_default;
        extern hello_world_plotter_draw_function_type hello_world_plotter_draw;
        extern hello_world_plotter_add_ref_function_type hello_world_plotter_add_ref;
        extern hello_world_plotter_release_function_type hello_world_plotter_release;
        
    #endif /* HELLO_WORLD_CAPI_DEFINE_FUNCTION_POINTERS */
    
    #ifdef __cplusplus
    
    #include <stdexcept>
    #include <sstream>
    
    #ifdef _WIN32
        #include <Windows.h>
    #else /* _WIN32 */
        #include <dlfcn.h>
    #endif /* _WIN32 */
    
    namespace hello_world
    {
        class Initialization
        {
            #ifdef _WIN32
                HINSTANCE handle;
            #else /* _WIN32 */
                void* handle;
            #endif /* _WIN32 */
            
            template<class FunctionPointerType>
            void load_function(FunctionPointerType& to_init, const char* name)
            {
                #ifdef _WIN32
                    to_init = reinterpret_cast<FunctionPointerType>(GetProcAddress(handle, name));
                #else /* _WIN32 */
                    to_init = reinterpret_cast<FunctionPointerType>(dlsym(handle, name));
                #endif /* _WIN32 */
                if (!to_init)
                {
                    std::stringstream error_message;
                    error_message << "Can't obtain function " << name;
                    throw std::runtime_error(error_message.str());
                }
            }
            
            void load_module(const char* shared_library_name)
            {
                if (!shared_library_name) throw std::runtime_error("Null library name was passed");
                #ifdef _WIN32
                    handle = LoadLibraryA(shared_library_name);
                #else /* _WIN32 */
                    handle = dlopen(shared_library_name, RTLD_NOW);
                #endif /* _WIN32 */
                if (!handle)
                {
                    std::stringstream error_message;
                    error_message << "Can't load shared library " << shared_library_name;
                    throw std::runtime_error(error_message.str());
                }
                load_function<hello_world_printer_default_function_type>(hello_world_printer_default, "hello_world_printer_default");
                load_function<hello_world_printer_show_function_type>(hello_world_printer_show, "hello_world_printer_show");
                load_function<hello_world_printer_copy_function_type>(hello_world_printer_copy, "hello_world_printer_copy");
                load_function<hello_world_printer_delete_function_type>(hello_world_printer_delete, "hello_world_printer_delete");
                load_function<hello_world_scanner_default_function_type>(hello_world_scanner_default, "hello_world_scanner_default");
                load_function<hello_world_scanner_scan_function_type>(hello_world_scanner_scan, "hello_world_scanner_scan");
                load_function<hello_world_scanner_delete_function_type>(hello_world_scanner_delete, "hello_world_scanner_delete");
                load_function<hello_world_plotter_default_function_type>(hello_world_plotter_default, "hello_world_plotter_default");
                load_function<hello_world_plotter_draw_function_type>(hello_world_plotter_draw, "hello_world_plotter_draw");
                load_function<hello_world_plotter_add_ref_function_type>(hello_world_plotter_add_ref, "hello_world_plotter_add_ref");
                load_function<hello_world_plotter_release_function_type>(hello_world_plotter_release, "hello_world_plotter_release");
            }
            
            Initialization();
            Initialization(const Initialization&);
            #ifdef HELLO_WORLD_CPP_COMPILER_HAS_MOVE_CONSTRUCTOR_DELETE
                Initialization(Initialization &&) = delete;
            #endif /* HELLO_WORLD_CPP_COMPILER_HAS_MOVE_CONSTRUCTOR_DELETE */
        public:
            Initialization(const char* shared_library_name)
            {
                load_module(shared_library_name);
            }
            ~Initialization()
            {
                #ifdef _WIN32
                    FreeLibrary(handle);
                #else /* _WIN32 */
                    dlclose(handle);
                #endif /* _WIN32 */
                hello_world_printer_default = 0;
                hello_world_printer_show = 0;
                hello_world_printer_copy = 0;
                hello_world_printer_delete = 0;
                hello_world_scanner_default = 0;
                hello_world_scanner_scan = 0;
                hello_world_scanner_delete = 0;
                hello_world_plotter_default = 0;
                hello_world_plotter_draw = 0;
                hello_world_plotter_add_ref = 0;
                hello_world_plotter_release = 0;
            }
        };
    }
    
    #endif /* __cplusplus */
    
#endif /* HELLO_WORLD_CAPI_USE_DYNAMIC_LOADER */

#endif /* HELLO_WORLD_CAPI_INCLUDED */

