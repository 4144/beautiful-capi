/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

#include <stdexcept>
#include <cassert>
#include "BodyImpl.h"
#include "SphereImpl.h"
#include "NodeImpl.h"
#include "PrinterImpl.h"
#include "DataImpl.h"

#ifdef _WIN32
    #ifdef __GNUC__
        #define EXAMPLE_API extern "C" __attribute__ ((dllexport))
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define EXAMPLE_API extern "C" __declspec(dllexport)
        #define EXAMPLE_API_CONVENTION __cdecl
    #endif
#elif __APPLE__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define EXAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define EXAMPLE_API extern "C"
    #endif
    #ifdef __i386__
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define EXAMPLE_API_CONVENTION
    #endif /* __i386__ */
#elif __unix__ || __linux__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define EXAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define EXAMPLE_API extern "C"
    #endif
    #ifdef __i386__
        #define EXAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define EXAMPLE_API_CONVENTION
    #endif /* __i386__ */
#else
    #error "Unknown platform"
#endif

int AutoGen_Internal_Test_ExampleGetMajorVersionImpl()
{
    return 1;
}

int AutoGen_Internal_Test_ExampleGetMinorVersionImpl()
{
    return 0;
}

int AutoGen_Internal_Test_ExampleGetPatchVersionImpl()
{
    return 0;
}

#ifdef _WIN32
    #ifdef __GNUC__
        #define SAMPLE_API extern "C" __attribute__ ((dllexport))
        #define SAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else
        #define SAMPLE_API extern "C" __declspec(dllexport)
        #define SAMPLE_API_CONVENTION __cdecl
    #endif
#elif __APPLE__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define SAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define SAMPLE_API extern "C"
    #endif
    #ifdef __i386__
        #define SAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define SAMPLE_API_CONVENTION
    #endif /* __i386__ */
#elif __unix__ || __linux__
    #if defined(__GNUC__) && __GNUC__ >= 4
        #define SAMPLE_API extern "C" __attribute__ ((visibility ("default")))
    #else
        #define SAMPLE_API extern "C"
    #endif
    #ifdef __i386__
        #define SAMPLE_API_CONVENTION __attribute__ ((cdecl))
    #else /* __i386__ */
        #define SAMPLE_API_CONVENTION
    #endif /* __i386__ */
#else
    #error "Unknown platform"
#endif

int AutoGen_Internal_Test_SampleGetMajorVersionImpl()
{
    return 1;
}

int AutoGen_Internal_Test_SampleGetMinorVersionImpl()
{
    return 0;
}

int AutoGen_Internal_Test_SampleGetPatchVersionImpl()
{
    return 0;
}

SAMPLE_API int SAMPLE_API_CONVENTION example_get_major_version()
{
    return AutoGen_Internal_Test_ExampleGetMajorVersionImpl();
}

SAMPLE_API int SAMPLE_API_CONVENTION example_get_minor_version()
{
    return AutoGen_Internal_Test_ExampleGetMinorVersionImpl();
}

SAMPLE_API int SAMPLE_API_CONVENTION example_get_patch_version()
{
    return AutoGen_Internal_Test_ExampleGetPatchVersionImpl();
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_geometry_brep_body_new()
{
    return new Example::Geometry::Brep::BodyImpl();
}

SAMPLE_API const char* SAMPLE_API_CONVENTION example_geometry_brep_body_get_name(void* object_pointer)
{
    Example::Geometry::Brep::BodyImpl* self = static_cast<Example::Geometry::Brep::BodyImpl*>(object_pointer);
    return self->GetName();
}

SAMPLE_API void SAMPLE_API_CONVENTION example_geometry_brep_body_set_name(void* object_pointer, const char* value)
{
    Example::Geometry::Brep::BodyImpl* self = static_cast<Example::Geometry::Brep::BodyImpl*>(object_pointer);
    self->SetName(value);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_geometry_brep_body_copy(void* object_pointer)
{
    return new Example::Geometry::Brep::BodyImpl(*static_cast<Example::Geometry::Brep::BodyImpl*>(object_pointer));
}

SAMPLE_API void SAMPLE_API_CONVENTION example_geometry_brep_body_delete(void* object_pointer)
{
    delete static_cast<Example::Geometry::Brep::BodyImpl*>(object_pointer);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_geometry_sphere_new()
{
    return new Example::Geometry::SphereImpl();
}

SAMPLE_API double SAMPLE_API_CONVENTION example_geometry_sphere_get_radius(void* object_pointer)
{
    Example::Geometry::SphereImpl* self = static_cast<Example::Geometry::SphereImpl*>(object_pointer);
    return self->GetRadius();
}

SAMPLE_API void SAMPLE_API_CONVENTION example_geometry_sphere_set_radius(void* object_pointer, double value)
{
    Example::Geometry::SphereImpl* self = static_cast<Example::Geometry::SphereImpl*>(object_pointer);
    self->SetRadius(value);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_geometry_sphere_copy(void* object_pointer)
{
    return new Example::Geometry::SphereImpl(*static_cast<Example::Geometry::SphereImpl*>(object_pointer));
}

SAMPLE_API void SAMPLE_API_CONVENTION example_geometry_sphere_delete(void* object_pointer)
{
    delete static_cast<Example::Geometry::SphereImpl*>(object_pointer);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_scene_node_new()
{
    return new Example::Scene::NodeImpl();
}

SAMPLE_API const char* SAMPLE_API_CONVENTION example_scene_node_get_name(void* object_pointer)
{
    Example::Scene::NodeImpl* self = static_cast<Example::Scene::NodeImpl*>(object_pointer);
    return self->GetName();
}

SAMPLE_API void SAMPLE_API_CONVENTION example_scene_node_set_name(void* object_pointer, const char* value)
{
    Example::Scene::NodeImpl* self = static_cast<Example::Scene::NodeImpl*>(object_pointer);
    self->SetName(value);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_scene_node_copy(void* object_pointer)
{
    return new Example::Scene::NodeImpl(*static_cast<Example::Scene::NodeImpl*>(object_pointer));
}

SAMPLE_API void SAMPLE_API_CONVENTION example_scene_node_delete(void* object_pointer)
{
    delete static_cast<Example::Scene::NodeImpl*>(object_pointer);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_printer_new()
{
    return new Example::PrinterImpl();
}

SAMPLE_API void SAMPLE_API_CONVENTION example_printer_show(void* object_pointer, const char* text)
{
    Example::PrinterImpl* self = static_cast<Example::PrinterImpl*>(object_pointer);
    self->Show(text);
}

SAMPLE_API void* SAMPLE_API_CONVENTION example_printer_copy(void* object_pointer)
{
    return new Example::PrinterImpl(*static_cast<Example::PrinterImpl*>(object_pointer));
}

SAMPLE_API void SAMPLE_API_CONVENTION example_printer_delete(void* object_pointer)
{
    delete static_cast<Example::PrinterImpl*>(object_pointer);
}

SAMPLE_API int SAMPLE_API_CONVENTION sample_get_major_version()
{
    return AutoGen_Internal_Test_SampleGetMajorVersionImpl();
}

SAMPLE_API int SAMPLE_API_CONVENTION sample_get_minor_version()
{
    return AutoGen_Internal_Test_SampleGetMinorVersionImpl();
}

SAMPLE_API int SAMPLE_API_CONVENTION sample_get_patch_version()
{
    return AutoGen_Internal_Test_SampleGetPatchVersionImpl();
}

SAMPLE_API void* SAMPLE_API_CONVENTION sample_data_new()
{
    return new Sample::DataImpl();
}

SAMPLE_API int SAMPLE_API_CONVENTION sample_data_get_data(void* object_pointer)
{
    Sample::DataImpl* self = static_cast<Sample::DataImpl*>(object_pointer);
    return self->GetData();
}

SAMPLE_API void SAMPLE_API_CONVENTION sample_data_set_data(void* object_pointer, int value)
{
    Sample::DataImpl* self = static_cast<Sample::DataImpl*>(object_pointer);
    self->SetData(value);
}

SAMPLE_API void* SAMPLE_API_CONVENTION sample_data_copy(void* object_pointer)
{
    return new Sample::DataImpl(*static_cast<Sample::DataImpl*>(object_pointer));
}

SAMPLE_API void SAMPLE_API_CONVENTION sample_data_delete(void* object_pointer)
{
    delete static_cast<Sample::DataImpl*>(object_pointer);
}
