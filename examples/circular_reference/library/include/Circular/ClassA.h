/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

#ifndef CIRCULAR_CLASSA_INCLUDED
#define CIRCULAR_CLASSA_INCLUDED

#ifdef __cplusplus

namespace Circular { 

class ClassA
{
protected:
    void* mObject;
    void SetObject(void* object_pointer)
    {
        mObject = object_pointer;
    }
public:
    ClassA(const ClassA& other)
    {
        SetObject(circular_classa_copy(other.mObject));
    }
    explicit ClassA(void *object_pointer)
    {
        SetObject(object_pointer);
    }
    ClassA()
    {
        SetObject(circular_classa_default());
    }
    ~ClassA()
    {
        circular_classa_delete(mObject);
    }
    void AddB(Circular::ClassB value)
    {
        circular_classa_addb(mObject, value);
    }
};
}

#endif /* __cplusplus */ 

#endif /* CIRCULAR_CLASSA_INCLUDED */

