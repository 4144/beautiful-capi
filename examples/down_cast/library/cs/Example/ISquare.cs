/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

namespace Example
{
    public class ISquare : Example.IPolygon
    {
        private global::System.Runtime.InteropServices.HandleRef capi_ptr;
        
        internal ISquare(global::System.IntPtr c_ptr, bool owned) : base(DownCastPINVOKE.Invoke_example_isquare_cast_to_base(c_ptr), owned)
        {
            capi_ptr = new global::System.Runtime.InteropServices.HandleRef(this, c_ptr);
        }
        
        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ISquare obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.capi_ptr;
        }
        
        ~ISquare()
        {
            Dispose();
        }
        
        public override void Dispose()
        {
            lock(this)
            {
                if (capi_ptr.Handle != global::System.IntPtr.Zero)
                {
                    if (capi_owned)
                    {
                        capi_owned = false;
                        DownCastPINVOKE.Invoke_example_isquare_release(capi_ptr);
                    }
                    capi_ptr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
                base.Dispose();
            }
        }
        
        public  void SetSize( size)
        {
            DownCastPINVOKE.Invoke_example_isquare_setsize(capi_ptr, size);
        }
    }
}
