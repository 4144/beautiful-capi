/*
 * Beautiful Capi generates beautiful C API wrappers for your C++ classes
 * Copyright (C) 2015 Petr Petrovich Petrov
 *
 * This file is part of Beautiful Capi.
 *
 * Beautiful Capi is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Beautiful Capi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Beautiful Capi.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

/*
 * WARNING: This file was automatically generated by Beautiful Capi!
 * Do not edit this file! Please edit the source API description.
 */

public class ExampleNS
{
    
    public static void CreateTriangle()
    {
        DownCastPINVOKE.Invoke_example_create_triangle();
    }
    
    public static void CreateSquare()
    {
        DownCastPINVOKE.Invoke_example_create_square();
    }
    
    public static void CreateCircle()
    {
        DownCastPINVOKE.Invoke_example_create_circle();
    }
    
    public static Example.IPolygon IShape_to_IPolygon(Example.IShape base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ishape_cast_to_example_ipolygon(Example.IShape.getCPtr(base_ptr));
        Example.IPolygon ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.IPolygon(c_ptr, false);
        return ret;
    }
    
    public static Example.ITriangle IPolygon_to_ITriangle(Example.IPolygon base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ipolygon_cast_to_example_itriangle(Example.IPolygon.getCPtr(base_ptr));
        Example.ITriangle ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.ITriangle(c_ptr, false);
        return ret;
    }
    
    public static Example.ITriangle IShape_to_ITriangle(Example.IShape base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ishape_cast_to_example_itriangle(Example.IShape.getCPtr(base_ptr));
        Example.ITriangle ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.ITriangle(c_ptr, false);
        return ret;
    }
    
    public static Example.ISquare IPolygon_to_ISquare(Example.IPolygon base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ipolygon_cast_to_example_isquare(Example.IPolygon.getCPtr(base_ptr));
        Example.ISquare ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.ISquare(c_ptr, false);
        return ret;
    }
    
    public static Example.ISquare IShape_to_ISquare(Example.IShape base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ishape_cast_to_example_isquare(Example.IShape.getCPtr(base_ptr));
        Example.ISquare ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.ISquare(c_ptr, false);
        return ret;
    }
    
    public static Example.ICircle IShape_to_ICircle(Example.IShape base_ptr)
    {
        global::System.IntPtr c_ptr = DownCastPINVOKE.Invoke_example_ishape_cast_to_example_icircle(Example.IShape.getCPtr(base_ptr));
        Example.ICircle ret = (c_ptr == global::System.IntPtr.Zero) ? null : new Example.ICircle(c_ptr, false);
        return ret;
    }
}
