<?xml version="1.0" encoding="utf-8" ?>
<down_cast:api xmlns:down_cast="http://gkmsoft.ru/beautifulcapi" project_name="DownCast">
  <namespace name="Example">
    <class name="IShape" lifecycle="reference_counted" implementation_class_name="Example::IShape" implementation_class_header="IShape.h">
      <method name="Show" const="true"/>
    </class>
    <class name="IPolygon" base="Example::IShape" lifecycle="reference_counted" implementation_class_name="Example::IPolygon" implementation_class_header="IPolygon.h">
      <method name="GetPointsCount" return="int" const="true"/>
    </class>
    <class name="ITriangle" base="Example::IPolygon" lifecycle="reference_counted" implementation_class_name="Example::TriangleImpl" implementation_class_header="TriangleImpl.h">
      <method name="SetPoints">
        <argument type="double" name="x1"/>
        <argument type="double" name="y1"/>
        <argument type="double" name="x2"/>
        <argument type="double" name="y2"/>
        <argument type="double" name="x3"/>
        <argument type="double" name="y3"/>
      </method>
    </class>
    <class name="ISquare" base="Example::IPolygon" lifecycle="reference_counted" implementation_class_name="Example::SquareImpl" implementation_class_header="SquareImpl.h">
      <method name="SetSize">
        <argument type="double" name="size"/>
      </method>
    </class>
    <class name="ICircle" base="Example::IShape" lifecycle="reference_counted" implementation_class_name="Example::CircleImpl" implementation_class_header="CircleImpl.h">
      <method name="SetRadius">
        <argument type="double" name="radius"/>
      </method>
    </class>
    <function name="CreateTriangle" return="Example::IShape" return_copy_or_add_ref="false" implementation_name="Example::CreateTriangle" implementation_header="TriangleFactory.h"/>
    <function name="CreateSquare" return="Example::IShape" return_copy_or_add_ref="false" implementation_name="Example::CreateSquare" implementation_header="SquareFactory.h"/>
    <function name="CreateCircle" return="Example::IShape" return_copy_or_add_ref="false" implementation_name="Example::CreateCircle" implementation_header="CircleFactory.h"/>
  </namespace>
</down_cast:api>
